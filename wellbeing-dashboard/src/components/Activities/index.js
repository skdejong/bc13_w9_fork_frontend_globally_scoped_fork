import { useState } from "react";
import "./index.css";
import ActivitiesInput from "./ActivitiesInput";
import { FaTrashAlt } from "react-icons/fa";

/**
 * @Returns Four divs containing activity lists and inputs. Main section of app.
 */
export default function Activities() {
  /**
   * Defining the initial the values of each state. For the demo, these contain pre-populated data.
   * Each object in each list contains an ID, text, and its relevant category name.
   * Ideally, rather than use states for these lists, we would be pulling from our database.
   * Due to time constraints, these states were created so that we could demo the app.
   */
  const initListPhysical = [
    { id: 1, text: "Stretched", category: "physical" },
    { id: 2, text: "Went for a walk", category: "physical" },
    { id: 3, text: "Yoga routine", category: "physical" },
    { id: 4, text: "Diid the macarena", category: "physical" },
  ];
  const initListEntertainment = [
    { id: 1, text: "Listened to an album", category: "entertainment" },
    { id: 2, text: "Watched a film", category: "entertainment" },
    { id: 3, text: "Played a video game", category: "entertainment" },
    { id: 4, text: "Watched YouTube videos", category: "entertainment" },
  ];
  const initListCreative = [
    { id: 1, text: "Knitted 20 rows", category: "creative" },
    { id: 2, text: "Did some artwork", category: "creative" },
    { id: 3, text: "Practised violin", category: "creative" },
    { id: 4, text: "Wrote in my journal", category: "creative" },
  ];
  const initListRelaxation = [
    { id: 1, text: "Had a bubble bath", category: "relaxation" },
    { id: 2, text: "Meditated", category: "relaxation" },
    { id: 3, text: "Socialised", category: "relaxation" },
    { id: 4, text: "Patted my pet", category: "relaxation" },
  ];
  /**
   * Here we are defining the state variable for each category list,
   * initializing them with the arrays above.
   */
  const [listPhysical, setListPhysical] = useState(initListPhysical);
  const [listEntertainment, setListEntertainment] = useState(initListEntertainment);
  const [listCreative, setListCreative] = useState(initListCreative);
  const [listRelaxation, setListRelaxation] = useState(initListRelaxation);

  /**
   * This function determines what should be done when list item DELETE buttons are clicked.
   * @param {*} id - each list item object has an ID
   * @param {*} category - each list item object lists its category
   * The if/else statements determine which state to alter depending on which button was clicked.
   */
  function handleDelete(id, category) {
    console.log(id, category);
    if (category === "physical") {
      setListPhysical([
        ...listPhysical.slice(0, id),
        ...listPhysical.slice(id + 1),
      ]);
    }
    if (category === "entertainment") {
      setListEntertainment([
        ...listEntertainment.slice(0, id),
        ...listEntertainment.slice(id + 1),
      ]);
    }
    if (category === "creative") {
      setListCreative([
        ...listCreative.slice(0, id),
        ...listCreative.slice(id + 1),
      ]);
    }
    if (category === "relaxation") {
      setListRelaxation([
        ...listRelaxation.slice(0, id),
        ...listRelaxation.slice(id + 1),
      ]);
    }
  }
  /**
   * This function is triggered when the ADD button in the input component is clicked.
   * It spreads the current state and adds the new item.
   * @param {*} item - the object generated by the button which contains user input and category.
   */
  function addActivity(item) {
    console.log(item);
    if (item.category === "physical") {
      setListPhysical([...listPhysical, item]);
    }
    if (item.category === "entertainment") {
      setListEntertainment([...listEntertainment, item]);
    }
    if (item.category === "creative") {
      setListCreative([...listCreative, item]);
    }
    if (item.category === "relaxation") {
      setListRelaxation([...listRelaxation, item]);
    }
  }
  /**
   * This is an array of category objects which contain information about each category. 
   * Each contain an id, name, category and the state/list
   * It has to map through inside each category.
   */
  let categories = [
    { id: 1, name: "Physical", category: "physical", list: listPhysical },
    { id: 2, name: "Creative", category: "creative", list: listCreative },
    { id: 3, name: "Entertainment", category: "entertainment", list: listEntertainment, },
    { id: 4, name: "Relaxation", category: "relaxation", list: listRelaxation },
  ];

  /**
   * This variable will be the current progress on each progress bar.
   * It is initialized at 0 and will take the value of the length of the current list as we map through each category.
   */
  let progressValue = 0;

  /**
   * Here we are rendering the four activity sections by mapping through the categories array, and inside each category, 
   * mapping through the corresponding list.
   */
  return (
    <section className="Activities">
      {categories.map((category) => {
        progressValue = category.list.length;
        return (
          <div className="Activity">
            <div class="actTop">
              <h2>{category.name}</h2>
              <div className="progress">
                <label class="label">
                  Progress: {progressValue}/8 &emsp;
                  <progress
                    class="progress"
                    value={progressValue}
                    max="8"
                  ></progress>
                </label>
              </div>
              <div className="scroll">
                {category.list.map((listItem, id) => (
                  <li className="actList">
                    {listItem.text}
                    <button
                      className="actButton"
                      onClick={() => {
                        handleDelete(id, listItem.category);
                      }}
                    >
                      <FaTrashAlt />
                    </button>
                  </li>
                ))}
              </div>
            </div>
            <ActivitiesInput
              category={category.category}
              addActivity={addActivity}
            />
          </div>
        );
      })}
    </section>
  );
}
